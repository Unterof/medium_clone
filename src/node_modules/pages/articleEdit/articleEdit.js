import React, {useContext, useEffect, useState} from 'react';
import useFetch from 'hooks/useFetch';
import ArticleForm from 'components/articleForm';
import {CurrentUserContext} from 'contexts/currentUser';
import {Redirect} from 'react-router-dom'

const ArticleEdit = ({match}) => {

    const slug = match.params.slug;
    const apiUrl = `/articles/${slug}`;
    const [initialValues, setInitialValues] = useState(null);
    const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl);
    const [{response: fetchUpdateResponse, error: updateErrorResponse}, doUpdateArticle] = useFetch(apiUrl);
    const [currentUserState] = useContext(CurrentUserContext)
    const [isSuccessfulSubmit,setIsSuccessfulSubmit] = useState(false)

    useEffect(() => {
        doFetchArticle();
    }, [doFetchArticle]);

    useEffect(() => {

        if (!fetchArticleResponse) {
            return
        }

        setInitialValues(
            {
                title: fetchArticleResponse.article.title,
                body: fetchArticleResponse.article.body,
                description: fetchArticleResponse.article.description,
                tagList: fetchArticleResponse.article.tagList
            }
        );
    }, [fetchArticleResponse]);


    const handleSubmit = (article) => {

        doUpdateArticle(
            {
                method: 'put',
                data: {article}
            }
        );

    };

    useEffect(()=>{

        if(!fetchUpdateResponse) {
            return
        }
        setIsSuccessfulSubmit(true)
    },[fetchUpdateResponse])

    if(currentUserState.isLoggedIn === false){
        return <Redirect to='/'/>
    }

    if (isSuccessfulSubmit){
      return <Redirect to={`/articles/${slug}`}/>
    }



    return <ArticleForm
        onSubmit={handleSubmit}
        errors={(updateErrorResponse && updateErrorResponse.errors) || {}}
        initialValues={initialValues}
    />;
};

export default ArticleEdit;