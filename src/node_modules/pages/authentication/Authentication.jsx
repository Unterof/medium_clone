import React, {useEffect, useState, useContext} from 'react';
import {Link, Redirect} from "react-router-dom";
import {CurrentUserContext } from 'contexts/currentUser'
import BackendErrorMessages from 'components/BackendErrorMessages'
import useLocalStorage from 'hooks/useLocalStorage'
import useFetch from 'hooks/useFetch.js'



const Authentication = (props) => {
    const isLogin = props.match.path === '/login';
    const pageTitle = isLogin ? 'Sign in' : 'Register';
    const descriptionLink = isLogin ? '/register' : '/login';
    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?';
    const apiUrl = isLogin ? '/users/login' : '/users';
    const [username, setUsername] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [isSuccessSubmit, setIsSuccessSubmit] = useState(false);
    const [, setToken] = useLocalStorage('token');
    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl);
    const [, dispatch] = useContext(CurrentUserContext)


    const handleSubmit = event => {
        event.preventDefault()

        const user = isLogin ? {email, password} : {email, password, username}

        doFetch(
            {
                method: 'post',
                data: {
                    user
                }
            })
    }


    useEffect(() => {
        if (!response) {
            return
        }

        setToken(response.user.token)
        setIsSuccessSubmit(true)
        dispatch({type:'SET_AUTHORIZED', payload: response.user})
        // setCurrentUserState(state => ({
        //     ...state,
        //     isLoading: false,
        //     isLoggedIn: true,
        //     currentUser: response.user
        //
        // })

    }, [response, setToken, dispatch])

    if (isSuccessSubmit) {
        return <Redirect to='/'/>
    }


    return (
        <div className={'auth-page'}>
            <div className={'container page'}>
                <div className={'row'}>
                    <div className={'col-md-6 offset-md-3 col-xs-12'}>
                        <h1 className={'text-xs-center'}>{pageTitle}</h1>
                        <p className={'text-xs-center'}>
                            <Link to={descriptionLink}>{descriptionText}</Link>
                        </p>
                        <form className={'ng-untouched ng-pristine ng-invalid'} onSubmit={handleSubmit}>

                            {error && <BackendErrorMessages backendErrors={error.errors}/>}
                            <fieldset>
                                {!isLogin && (
                                    <fieldset className={'form-group'}>
                                        <input placeholder={'name'} className={'form-control form-control-lg'}
                                               type={'text'} value={username}
                                               onChange={e => setUsername(e.target.value)}/>
                                    </fieldset>)
                                }

                                <fieldset className={'form-group'}>
                                    <input placeholder={'email'} className={'form-control form-control-lg'}
                                           type={'email'} value={email}
                                           onChange={e => setEmail(e.target.value)}/>
                                </fieldset>
                                <fieldset className={'form-group'}>
                                    <input placeholder={'password'} className={'form-control form-control-lg'}
                                           onChange={e => setPassword(e.target.value)} value={password}
                                           type={'password'}/>
                                </fieldset>
                            </fieldset>
                            <button className={'btn btn-lg btn-primary pull-xs-right'}
                                    disabled={isLoading}>{pageTitle}</button>
                        </form>
                    </div>
                </div>

            </div>

        </div>
    )
};

export default Authentication