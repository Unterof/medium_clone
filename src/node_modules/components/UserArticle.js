import React, {Fragment, useEffect} from 'react';
import {stringify} from "query-string";

import Feed from 'components/Feed';
import useFetch from 'hooks/useFetch';
import {getPaginator, limit} from "../utils";
import Loading from 'components/Loading';
import ErrorMessage from 'components/ErrorMessage';
import Pagination from 'components/pagination';


const getApiUrl = ({offset, isFavorited, username}) => {

    let params = isFavorited
        ? {limit, offset, favorited: username}
        : {limit, offset, author: username}

    return `/articles?${stringify(params)}`
}

const UserArticle = ({username,  location, url}) => {

    const isFavorited = location.pathname.includes('favorites')
    const {offset, currentPage} = getPaginator(location.search)
    const apiUrl = getApiUrl({offset, isFavorited, username})
    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)



    useEffect(() => {
        doFetch()
    }, [doFetch,isFavorited,currentPage])

    return <div>
        {isLoading && <Loading/>}
        {error && <ErrorMessage/>}
        {!isLoading && response && <Fragment>
            <Feed articles={response.articles}/>
            <Pagination total={response.articlesCount}
                        limit={limit}
                        currentPage={currentPage}
                        url={url}
                       />
        </Fragment>
        }
    </div>

}
export default UserArticle