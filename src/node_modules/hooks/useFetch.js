import {useCallback, useEffect, useState} from "react";
import axios from "axios";
import useLocalStorage from 'hooks/useLocalStorage'


export default url => {
    const baseUrl = 'https://conduit.productionready.io/api'
    const [isLoading, setIsLoading] = useState(false)
    const [response, setResponse] = useState(null)
    const [error, setError] = useState(null)
    const [options, setOptions] = useState({})
    const [token] = useLocalStorage('token')

    const doFetch = useCallback((options = {}) => {
        setOptions(options)
        setIsLoading(true)
    }, [])

    useEffect(() => {
            let skipRenderAtResponse = false
            const advancedOptions = {
                ...options,
                ...{
                    headers: {
                        authorization: token ? `Token ${token}` : ''
                    }
                }
            }
            if (!isLoading) {
                return
            }
            axios(baseUrl + url, advancedOptions)
                .then(res => {
                    if (!skipRenderAtResponse) {
                        setIsLoading(false)
                        setResponse(res.data)
                    }
                })
                .catch(error => {
                        if (!skipRenderAtResponse) {
                            setIsLoading(false)
                            setError(error.response.data)
                        }
                    }
                )
            return () => {
                skipRenderAtResponse = true
            }
        }, [isLoading, options]
    )


    return [{isLoading, response, error}, doFetch]
}